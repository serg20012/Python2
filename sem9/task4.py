# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ4
# üìå –°–æ–∑–¥–∞–π—Ç–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º.
# üìå –ü–∞—Ä–∞–º–µ—Ç—Ä - —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—É—Å–∫–æ–≤ –¥–µ–∫–æ—Ä–∏—Ä—É–µ–º–æ–π
# —Ñ—É–Ω–∫—Ü–∏–∏.
from typing import Callable


def count(num: int = 1):
    def deco(func: Callable):
        my_dict = {}

        def wrapper(*args, **kwargs):
            for i in range(num):
                result = func(*args, **kwargs)
                my_dict[i] = result
            return my_dict
        return wrapper
    return deco


@count(5)
def my_sum(num1, num2):
    return num1 + num2


if __name__ == "__main__":
    result = my_sum(2, 5)
    print(result)
