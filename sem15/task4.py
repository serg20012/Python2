# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ4
# üìå –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ —Ç–µ–∫—Å—Ç –≤–∏–¥–∞: ‚Äú1-–π —á–µ—Ç–≤–µ—Ä–≥ –Ω–æ—è–±—Ä—è‚Äù, ‚Äú3-
# —è —Å—Ä–µ–¥–∞ –º–∞—è‚Äù –∏ —Ç.–ø.
# üìå –ü—Ä–µ–æ–±—Ä–∞–∑—É–π—Ç–µ –µ–≥–æ –≤ –¥–∞—Ç—É –≤ —Ç–µ–∫—É—â–µ–º –≥–æ–¥—É.
# üìå –õ–æ–≥–∏—Ä—É–π—Ç–µ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É.

from datetime import time, date, datetime
import logging

FORMAT = '–¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è - {asctime}. –û—à–∏–±–∫–∞: {msg}'

logging.basicConfig(filename='.\\sem15\\task4.log', format=FORMAT, style='{', filemode='w',
                    encoding='utf-8', level=logging.INFO)
# logging.basicConfig(filename='.\\sem15\\task4.log', filemode='w',
#                     encoding='utf-8', level=logging.INFO)


def convert_date(text):
    months = {
        '—è–Ω–≤–∞—Ä—è': '01',
        '—Ñ–µ–≤—Ä–∞–ª—è': '02',
        '–º–∞—Ä—Ç–∞': '03',
        '–∞–ø—Ä–µ–ª—è': '04',
        '–º–∞—è': '05',
        '–∏—é–Ω—è': '06',
        '–∏—é–ª—è': '07',
        '–∞–≤–≥—É—Å—Ç–∞': '08',
        '—Å–µ–Ω—Ç—è–±—Ä—è': '09',
        '–æ–∫—Ç—è–±—Ä—è': '10',
        '–Ω–æ—è–±—Ä—è': '11',
        '–¥–µ–∫–∞–±—Ä—è': '12',
    }
    days = {
        '–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫': '0',
        '–≤—Ç–æ—Ä–Ω–∏–∫': '1',
        '—Å—Ä–µ–¥–∞': '2',
        '—á–µ—Ç–≤–µ—Ä–≥': '3',
        '–ø—è—Ç–Ω–∏—Ü–∞': '4',
        '—Å—É–±–±–æ—Ç–∞': '5',
        '–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ': '6',
    }

    week, day_week, month = text.split()
    try:
        day_week = int(days.get(day_week))
    except Exception as e:
        logging.info("–¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏!")
        return
    try:
        month = int(months.get(month))
    except Exception as e:
        logging.info("–º–µ—Å—è—Ü!")
        return
    try:
        week = int(week[0:1])
        if week == 1:
            koef = 0
        elif week == 2:
            koef = 7
        elif week == 3:
            koef = 14
        elif week == 4:
            koef = 21
        elif week == 5:
            koef = 28

        for i in range(1, 8):
            test_day = date(2023, month, i+koef)
            # print(test_day)
            if test_day.weekday() == day_week:
                break
    except Exception as e:
        logging.info("–Ω–µ–¥–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        return
    return test_day


text = "1-—è —á–µ—Ç–≤—ã–µ—Ä–≥ –Ω–æ—è–±—Ä—è"
result = convert_date(text)
if result:
    print(result)
else:
    print("–ù–µ–≤–µ—Ä–Ω—ã–∏ÃÜ —Ñ–æ—Ä–º–∞—Ç —Å–º. task4.log")
