# Задание №1
# ✔ Вручную создайте список с целыми числами, которые
# повторяются. Получите новый список, который содержит
# уникальные (без повтора) элементы исходного списка.
# ✔ *Подготовьте два решения, короткое и длинное, которое
# не использует другие коллекции помимо списков.

# list1 = [1, 35, 6, 7, 4, 3, 2, 2, 3, 5, 6, 7]
# list2 = list(set(list1))
# print(list2)

# list3 = []
# for i in list1:
#     if i not in list3:
#         list3.append(i)
# print(list3)

# Задание №2
# Пользователь вводит данные. Сделайте проверку данных
# и преобразуйте если возможно в один из вариантов ниже:
# ✔ Целое положительное число
# ✔ Вещественное положительное или отрицательное число
# ✔ сделать строку в нижнем регистре, если в строке есть
# хотя бы одна заглавная буква
# ✔ сделать Строку в верхнем регистре в остальных случаях

# x = input("Введите данное: ")
# if str.isdigit(x):
#     print("Целое положительное число ")

# elif x.count(".") == 1 or x.startswith("-"):
#     print("1+")
#     if (x.replace(".", "").replace("-", "", 1)).isdigit():
#         print("Вещественное положительное или отрицательное число1")

# elif x != x.lower():
#     print("3- var", x.lower())
# else:
#     print(x.upper())

# вариант 2
# x = input(" what: ")
# print(type(x))
# if x.isdigit() and int(x) >= 0:
#     print("Целое положительное число")
#     x = int(x)
#     print(type(x))
# elif x.replace('-', '', 1).replace('.', '', 1).isdigit() and x.startswith("-"):
#     print("число но дробное или отрицательное")
#     x = float(x)
#     print(type(x))
# elif any(letter.isupper() for letter in x):
#     print("В строке есть хотя бы одна заглавная буква.")
#     x = x.lower()
#     print(x)
#     print(type(x))
# else:
#     print("не число, нет заглавных.")
#     x = x.upper()
#     print(x)
#     print(type(x))


# Задание №3
# ✔ Создайте вручную кортеж содержащий элементы разных типов.
# ✔ Получите из него словарь списков, где:
# ключ — тип элемента,
# значение — список элементов данного типа
# tuple1 = (1, 3, True, "cat", 5.6, True, 3.4, 5, 6)
# dict1 = {}
# for i in tuple1:
#     i_x = type(i)
#     # print(i_x)
#     if i_x in dict1:
#         val = dict1[i_x]
#         print(val, "pyfxtybt")
#         if isinstance(val, list):
#             # print("one")
#             dict1[i_x].append(i)
#         else:
#             dict1[i_x] = []
#             dict1[i_x].extend([val, i])

#         # print("aaaa")
#     else:
#         dict1.setdefault(i_x, i)
#     print(dict1)
#     # input()

# print(dict1)


# Задание №4
# ✔ Создайте вручную список с повторяющимися элементами.
# ✔ Удалите из него все элементы, которые встречаются дважды.

# list1 = [1, 35, 6, 7, 4, 3, 2, 2, 3, 4, 5, 6, 7, 6, 25, 10, 10]
# i = 0

# while i < len(list1):
#     el = list1[i]
#     print("длина списка ", len(list1))
#     print("круг цикла ", i)
#     print("сейчас элемент ", el)
#     spam = list1.count(el)
#     print("элемент выше встречается раз - ", spam)
#     if spam >= 2:
#         for _ in range(spam):
#             print("надо удалить", el)
#             list1.remove(el)
#         i = i - 1
#     i = i + 1
#     print(list1)
#     input()
# print(list1)

# Задание №5
# ✔ Создайте вручную список с повторяющимися целыми числами.
# ✔ Сформируйте список с порядковыми номерами
# нечётных элементов исходного списка.
# ✔ Нумерация начинается с единицы.

# list1 = [1, 35, 6, 7, 4, 3, 2, 2, 3, 5, 6, 7, 6]
# list2 = []
# x = 0
# # for i in list1:
# #     x = x + 1
# #     print("значение из лист1: ", i)
# #     print("текущее место в лист2 ", x)
# #     if i % 2 > 0:
# #         list2.append(x)
# #     print(list2)
# #     input()
# # # Вариант 2
# for i, nom in enumerate(list1, start=1):
#     print(i, nom)
#     if nom % 2 > 0:
#         list2.append(i)


# print("нечетные элементы из лист1 имеют порядковые номера ", list2)

# Задание №6
# Пользователь вводит строку текста. Вывести каждое слово с новой строки.
# ✔ Строки нумеруются начиная с единицы.
# ✔ Слова выводятся отсортированными согласно кодировки Unicode.
# ✔ Текст выравнивается по правому краю так, чтобы у самого длинного
# слова был один пробел между ним и номером строки.

# text = "сьешь еще этих мягких французских булок"
# text2 = text.split(" ")
# text2.sort()
# print(text2)
# x = max(len(word) for word in text2)
# print(x)
# for i, word in enumerate(text2, start=1):
#     # res = i, word
#     # print(res)
#     # input()
#     print(f'{i} {word:>{x}}')

# Задание №7
# ✔ Пользователь вводит строку текста.
# ✔ Подсчитайте сколько раз встречается
# каждая буква в строке без использования
# метода count и с ним.
# ✔ Результат сохраните в словаре, где ключ —
# символ, а значение — частота встречи
# символа в строке.
# ✔ Обратите внимание на порядок ключей.
# Объясните почему они совпадают
# или не совпадают в ваших решениях.

#
# text = "сьешь еще этих мягких французских булок"
# text2 = sorted(text)
# print(text2)
# dict1 = {}
# for i in text2:
#     if i != " ":
#         l = text2.count(i)
#         dict1[i] = l
# print(dict1)

# dict1 = {}
# for i in text2:
#     if i != " ":
#         if i not in dict1:
#             dict1[i] = 1
#         else:
#             x = dict1[i]
#             x = x+1
#             dict1[i] = x
# print(dict1)
